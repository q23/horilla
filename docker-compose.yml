version: '3.8'
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./entrypoint.sh
    environment:
      # Benutzer-Einstellungen
      - USER=${USER}
      - USER_EMAIL=${USER_EMAIL}
      - USER_PW=${USER_PW}
      # Email settings
      - EMAIL_BACKEND=${EMAIL_BACKEND}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      # Security settings
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    volumes:
      - ./horilla:/app/horilla
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - horilla-network

  db:
    image: postgres:16-bullseye
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS}
      - PGDATA=${PGDATA}
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - horilla-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - horilla-network

volumes:
  horilla-data:

networks:
  horilla-network:
    driver: bridge